<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 	
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hkAiRpaProject.mapper.MemberShipMapper">
<update id="myPassUpdate" parameterType="memVO">
 update member
 set member_pw = #{memberPw}
 where member_id = #{memberId}
</update>
<select id="memberPwSelect" parameterType="string" resultType="string">
	select member_pw from member where member_id =  #{memberId}
</select>
<update id="myInfoUpdate" parameterType="memVO">
	update member
	set  member_Name = #{memberName} ,member_addr = #{memberAddr}
		,member_addr2 = #{memberAddr2} ,member_post = #{memberPost}
		,member_gender = #{memberGender} ,member_phone = #{memberPhone}
		,member_email = #{memberEmail} ,member_birth = #{memberBirth}
	where member_id = #{memberId}
</update>

<delete id="myDelete" parameterType="string">
	delete from member where member_id=#{userId}
</delete>


<select id="myInfoSelect" parameterType="string" resultType="memVO">
	select MEMBER_NUM memberNum,MEMBER_ID memberId,MEMBER_PW memberPw
	      ,MEMBER_NAME memberName,MEMBER_ADDR memberAddr
	      ,MEMBER_ADDR2 memberAddr2,MEMBER_POST memberPost
          ,MEMBER_REGI_DATE memberRegiDate,MEMBER_GENDER memberGender
          ,MEMBER_PHONE memberPhone,MEMBER_EMAIL memberEmail
          ,MEMBER_BIRTH memberBirth
    from member
    where MEMBER_ID = #{userId}
</select>


<update id="memberCkeckUpdate" parameterType="string">
	update member
	set member_ok = 'y'
	where member_ok is null and member_email = #{email}
</update>
<insert id="MemberShipInsert" parameterType="memVO">
	insert into member(MEMBER_NUM,MEMBER_ID,MEMBER_PW,MEMBER_NAME,MEMBER_ADDR,
					<if test="memberAddr2 != null">
					MEMBER_ADDR2,
					</if>					
					MEMBER_POST,
                   MEMBER_REGI_DATE,MEMBER_GENDER,MEMBER_PHONE,MEMBER_EMAIL,MEMBER_BIRTH )
	values(  (select concat('mem' , nvl(max(substr(member_num,4)),100000) + 1) from member)
					,#{memberId},#{memberPw},#{memberName},#{memberAddr},
					<if test="memberAddr2 != null">
					#{memberAddr2},
					</if>
					#{memberPost},
					sysdate,#{memberGender},#{memberPhone},#{memberEmail},#{memberBirth})
</insert>
<select id="selectMember" parameterType="string" resultType="authInfo">
	select member_id userId , member_email userEmail ,
		   member_pw  userPw, member_phone phone, 
		   member_Ok memberOk, 'mem' grade
	from member
	where member_num = (select member_num from purchase 
	                    where purchase_num = #{purchaseNum}) 
</select>

</mapper>